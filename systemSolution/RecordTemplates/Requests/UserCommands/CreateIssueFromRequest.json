{
  "$type": "Comindware.Platform.Contracts.UserCommandConfigurationModel, Comindware.Platform.Contracts",
  "GlobalAlias": {
    "$type": "Comindware.Platform.Contracts.GlobalAlias, Comindware.Platform.Contracts",
    "Type": "UserCommand",
    "Owner": "Requests",
    "Alias": "CreateIssueFromRequest"
  },
  "Name": "CreateIssueFromRequest",
  "IsSystem": false,
  "IsDisabled": false,
  "IsPrepare": false,
  "SkipValidation": false,
  "Context": "Record",
  "Multiplicity": "OneByOne",
  "Kind": "Script",
  "ResultType": "DataChange",
  "ScriptRule": {
    "$type": "Comindware.Platform.Contracts.UserCommandScriptRuleModel, Comindware.Platform.Contracts",
    "Type": "UserCommandScript",
    "Definition": {
      "$type": "Comindware.Platform.Contracts.CSharpRuleDefinitionModel, Comindware.Platform.Contracts",
      "EntryPoint": "Script",
      "References": {
        "$type": "System.String[], mscorlib",
        "$values": [
          null
        ]
      },
      "Code": "using System;\r\nusing System.IO;\r\nusing System.Collections.Generic;\r\nusing System.Linq;\r\nusing Comindware.Data.Entity;\r\nusing Comindware.TeamNetwork.Api.Data.UserCommands;\r\n\r\npublic class Script\r\n{\r\n    public static UserCommandResult Main(UserCommandContext userCommandContext, Comindware.Entities entities)\r\n    {\r\n        foreach(var id in userCommandContext.ObjectIds)\r\n        {\r\n            var request = Api.TeamNetwork.ObjectService.GetWithAlias(\"Requests\", id);\r\n            \r\n\t\t\tvar data = new Dictionary<string, object>();\r\n            data[\"Area\"] = request.ContainsKey (\"Area\") ? request[\"Area\"] : null;\r\n\t\t\tif (request.ContainsKey (\"files\"))\r\n\t\t\t\tdata[\"Attachments\"] = request[\"files\"];\r\n\t\t\tdata[\"Customer\"] = request.ContainsKey (\"customer\") ? request[\"customer\"] : null;\r\n\t\t\tdata[\"Description\"] = request.ContainsKey (\"Description\") ? request[\"Description\"] : null;\r\n\t\t\tdata[\"Errorbuildnumber\"] = request.ContainsKey (\"currentBuild\") ? request[\"currentBuild\"] : null;\r\n\t\t\tdata[\"Issuebuildnumber\"] = request.ContainsKey (\"currentBuild\") ? request[\"currentBuild\"] : null;\r\n\t\t\tdata[\"title\"] = request.ContainsKey (\"name\") ? request[\"name\"] : null;\r\n\t\t\tdata[\"Priority\"] = entities.Priority.Where(x => x.Title == \"None\").Select(x => x.id).Single();\r\n\t\t\tdata[\"Project\"] = request.ContainsKey (\"project\") ? request[\"project\"] : null;\r\n\t\t\tdata[\"publicIssueFlag\"] = true;\r\n\t\t\tdata[\"Request\"] = request[\"id\"];\r\n\t\t\tdata[\"Responsible\"] = Api.Base.AccountService.FindByEmail (\"cy@comindware.com\");\r\n\t\t\tdata[\"Status\"] = entities.IssueStatus.Where(x => x.code == \"draft\").Select(x => x.id).Single();\r\n\t\t\t\r\n\t\t\tvar issue = Api.TeamNetwork.ObjectService.CreateWithAlias (\"Issue\", data);\r\n\t\t\t\r\n\t\t\tvar irData = new Dictionary<string, object>{\r\n                {\"Issue\", issue},\r\n                {\"Request\", request[\"id\"]}\r\n            };\r\n\t\t\t\r\n\t\t\tApi.TeamNetwork.ObjectService.CreateWithAlias (\"Issues_Requests\", irData);\r\n        }\r\n        \r\n        var result = new UserCommandResult\r\n        {\r\n            Success = true,\r\n            Commited = true,\r\n            ResultType = UserCommandResultType.DataChange,\r\n            Messages = new[]\r\n            {\r\n                new UserCommandMessage\r\n                {\r\n                    Severity = SeverityLevel.Normal,\r\n                    Text = \"Заявка успешно создана\"\r\n                }\r\n            }\r\n        };\r\n        return result;\r\n    }\r\n}",
      "Type": "CSharpExpression"
    }
  },
  "RelatedEntityGlobalAlias": {
    "$type": "Comindware.Platform.Contracts.GlobalAlias, Comindware.Platform.Contracts",
    "Type": "Undefined"
  },
  "LockStateChangeType": "Undefined",
  "LockStateVisibilityType": "Undefined"
}